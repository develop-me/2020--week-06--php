%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 465.000000 248.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 465 248
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 465 248
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FiraMono-Regular
%!FontType1-1.0: FiraMono-Regular 003.206%%CreationDate: 7/28/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (003.206) readonly def/FullName (Fira Mono Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch true def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /FiraMono-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /f putdup 34 /i putdup 35 /r putdup 36 /s putdup 37 /t putdup 38 /N putdup 39 /a putdup 40 /m putdup 41 /e putdup 42 /l putdup 43 /b putdup 44 /h putdup 45 /d putdup 46 /g putdup 47 /A putdup 48 /parenleft putdup 49 /parenright putreadonly def/FontBBox {-307 -500 1192 1050} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF006B842050443FB77C45215DA78478CD835172FCCCC4F4213CF1A2398EC517835741CFCE40C5F17B2FFB8B4A42A024440D45C4D6D4BFAFE70533629D15EC9ED206750792530A49E47EF73A1E167697D86DDE366B58A2787E3E216B3B8F6318CBFDCA601FF6BCF78A885BFA77DDAA5688E831AE680ABFE2B06C262A9EA050BFD14A7F1EDA7FABC7096F35C412728CDBD740153E44610C74B9C8318E0CB6B5D97BB230050D9913386169B7C184309A3187AEC89E79600E8D1235B01A04E1FD35C4A4BF07169405E4CA5FF02D39A32DD0E37C5844735BDA964971838591DE71249AA891C943A4638BBF841CB1E7D24312D2B4453E6636353C766D27318216842758518608EFC113754C7401CC1E527A4AE6DD8A8112841431D026FE89A67B422B63DBA70CEF6529F3DBB7028A0D4240C07CEDAF4796EFD3FE516B9A55D5BDEA67048524C3FCB225E867D2A9A6887796DEA0A53EB2B86AA89D8F0E071502A03F04FB5CB6DD334D45CD963544CB89F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6FF29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2171B10E136A72226004F50FFDEC78468A80CAAC9375C5E423B1D934565F5A1A5B2011C196FA9A97A563D82FE2B9581D471140E99CB844CF41E7809FD388FB2EEE6EF3A4C185D924682D3823DC7EFAC1E1CDDA98B15A51937C5C601FD41E575F325EFB582FED3B52C745557654DDC4B49B95CB44FFD219FF304FBECC8A124E19C573A27CB8B8380BF7469C5B1D930906B46186675414B1AD887511DC1CB6AB9857F661206A892DBF73AC20494E5D9209C8A41CADAE901380EC919321D7DB03CC9F56481901E340C2554FAFF0F344F762C2EF1AD0A15552B4A4614903AD544626EBB65B613B64777EBAFCD7D0039909080AD8889FFF0C56DDAA0365E81924DC0CDE51F013702DD6E88A47A14AFFCF50AD343D05310CABC7CE27404706EF52D5E36B3BCCDA658483D1DC1725FD525483366F1BBF9607522A6966F9B6C410D8E0546659572B0A87EAC4055F4900892733E678CC2E08E05FD1E3F115289D6EE264D2E42B70720FDE66E2F6FCDF7D895FE7EC2F917C9F234206B7F456267579504D599EDE21F69AB210D7DAC22EB104B64AA44F453CD38D6D1A5DCBE51CA8C6EF657A3C217E60F6F0B6114644964E00D2062A57BB60860C8E9F903EC328B327BD5A84B629526C0F64D1AC05676669A497FFEAEC7CA8111529C7E16A2858E8C72A8ACEF0009457583070AFA1A3107129E96BA52BE232C0E1381E5D8205804D96443169B4A5FA01838E0168A11C4CB7D6941356173442EF42CFA3A92F816BF102375C2CF71390662C0717078EEE1CD98921E9B640C7CB9AE6C1F77001860871460C46DAC3FC491320930C12E33EA9105692D68FE1B1B5DEE9A4A0A47C24D921D577452DFDDE1B4A4D864E0D2AAEF373F663E0838FB4005E0A53FD0606A4F96FDF9CCE08A3158AE074690B09D53C141255C94F632F65EEEE9084125BA65392315414592E475A51839BF04C1A1C790564C3A75123CF8A9BF3BAEBAC3C032FA79D85ADE5885E8146F35CA173FEA62E8729FED7C9DE3C39EEE2C98637B67F1E07F5AA0DC7A8BA4CE7B11D45A6177415951E31976510EC0194143FFFC017D29E266E9E9CB89EB561AD8594DB5DE8C84321BF634CDA4A09E360945FE52F42640F9280D5C6B147CB0D994B5B582B18E1EDAB7360B23AFA7F8636E857BE6561D6C1CF6120DED9727E5B2C3F59728CB2B7596F331B6DFEC66F08F83DBE27586362A2FD3531F06B408DE4FDB122F9B56D4C546E773DA736CAD7ED8E81539BD6B5F255358A3CEEB0C8372385AA1B44D25B3E2C9AEEF8E53015AE1822D305EF7D1798271B9489CD0F5BC2E1EBADC1DB9EF3EEB521D10EA061A7ADF3272D0CE26151EC05269CD1567C01C12E20AC70361A10E2702D1B16A8B69AF88ACA2F5488BA6E54A44FBC573AC2CAFD9548F622CD89AD6F860F7001AB3EEECFC13BEFE36F11F84FD02DFC68B9216230573427442D945AD6345F1D1148EE681D674316EDA3F2F837C284FA04C21DD8F81D9966B6C87321C8805008FB0397824C442CBB87FFAAFEB094294151D0B833446AF41C5568DCB42FA88C69AC5FFE4AEA50D596744988C0DDB9053E29BAD292C4BEAF6BD8212EABEE6059338F9F6A724C22BDC9F7727A017A6C15EE425042813FD9B5856BB578B700B57DB98C2E024326C11F168C3780F2ED1E09BBE6D68E22B0F2AF6127AD6AA23978574147686F98DF7D87B87C6079983AC37215ABCDD2038DF1B6B4514BAA171B3988AF291173D1FB40174401ACD9E0724BCAE0EA4731E68A86E4E4814FEB84CBB994C29A70E2EDB34BFE848521DAD7475B591C14DAC10F5ECAD2E0D44B17122C4C87E26AFA047AD3FC1BC085DD1894C5B769209C03AC44C9B5E1507A326B25B4CAB901F98292B2EE4657DB4C52DB1B9E1B3AE48196A5D0DAEB1B3D0D6016FBD64BA671ECB2B3C927F21E5E7DF6ECBB7BE6E197909DF66965FA64B534E8E4DA1CF9677393BF38DDDF2D24500BFA67339CA7A1734E04AD97DB9FAAD473BD972849E80C95E9141666F18DA3C621F24ECC20183581A16545C7AE2AF790EE23671446BD3ECADA1E2196D35A559F37DB5D61D2C2754B0915FD3E1B41F787CEBD575227214CDC5255C044F5DF99B78647535F850843378EDF835CF40FEA02C967B54AD47019EDAC90C587EF28F860BC959566FB761DD199D56F801C0F031EB20098FB40F3F89B7E3E63FABF90C0DBA41AEE452043EF54C657114CEB15D56A42F05F707A334A62FC776DA2C3F60E860DC3A5E4994B76DFC3646E046487A4DABFC411D037140FA4A7AD2858E509BAE280BB5D3D1D1D4947AE350F4EF42C10468159A315E37EE96A9E87ED7C5DE65CB9931B0D5495D96CCA65C9DECEC2B71C0CEAAFBD5AB9D1171486F31BC1518D41E80DB9B9F8B576D2ED47998831A18C1C471EED0E64B25DE95B2E91CCF56FD0D4DBF5E13296F7682AF47A3DB501D22C2F95E2AB6208037F7EB7C4362453076F9A8BA02A5574F672DDA96D6C25BE7DB65E967DF9D96DB34F88948CD12B11A7BC97C916D168D64DB2DD72C409A0280FDFFF4F5F53906C3E772028BF890432311544E880ACD627922CF5A3C2BC67CC1E9F999F8E7FC31609B6BBBF3FAA1C79262C278D19A6BBF8B23935F664716E2769A98F89EB6A2D057796E55723669730991A68BAB267E283974B0938712B5F659D6EE16240D3A1E5525FA434420E01D19A11620E9967FB80CE99D60FDADAAF92FFCDA04A73CA25431ECCB7D3FBB6D2F293109937C7465155D58C1A40D63D2F9E784F2A278A6497AFD0DF1C9C2AB8B4F83B499B6B1185679E7EDF688E60976C1E11F66F1CF888319B60BBBA09016FAF1CE9FA41D5FD3090726B068896BA022F6771B88F7F3B94AD45A453FFD609274EFA9AE756CBF6E3730CF8995B4C2EDA05B4343C85DAC50EC579CA1DE599466D30158D7599711D8F6E328976C3E8A1B0BED52C6296F3DFBBDA7CD3656EF3724D67961B45DAB1D05845B6C1778696C0521C7681D13C739D10E9F56E47903B920A1C98ED5C167C24749FBF1C02EC97EA84A90C8DFA82CB0FADDD7C61CA255389C2C4F72FAE051FF942CE5B66FF2593D5A53953742DE6BFE121E9BA9351D5FF6A0494B91BE3F010BBD26FCC572CC853B6B61D3CD6B17233ECDCC0A51F5E992024CC63612E07B071AB8D3962F513E046626077E7E56908D1C9A3D7E3A66306AB35808EBB4718B2AC9F225922F1102F20A09BD1AA529604AA059CE71DDBC40AF3D2C7CDC9F265B8DD3CF0DA2744083C44454C2720ECE819DB209CA172B505C57D57C1D4AF8C139E01EB3A16F2A3C897E50DFA56263BE50D48E2D5614480207774437B7FD127908B93ACA27787C545D9F16E7203D46CBFFDF6FC0CB4CCA6A8B688071806C5C38399D9269CD3F27A5CBA60961F1BC28B8B5D01E633AE9E93D53FB67F0107D0507D6967FC073D244A3BB909EA9D29AC101A039E97CA88DEAFA56512DCF5DE26D791DD66399CA1EBB438E1822525BBEABD44AAA5DE1A609846DB448559440BE67FE9DB24BB053BD93F09BC4D5992F818B76FFF81D71729DFB5A120E1C3CDB6751D3B5E54640EDB3DAE4339BE40F0A128FFD4F16F7B32D01FC0F3203C8A92968B99B839BDB26BB15B68CEEEC7C6722E32EB207634C1AF2FB6D646AFC5D37433E6C4F7ED99E74443EF6F36A1CEF4DFA84E5BC82D67817373A1D876149BDE0697C7E0E88F1022B18138C46643C94E1FFA2617AA06566A20C814F4AD73D965E38EEA1A51BC10131E7621C9F0A4E7B035539A37936D8101A0D62A46D7458F9EADDEEAEFDF192FF1089A2A23C2BC80DC191890B9E72AC51329F522CBD854AA313817072781950D02395B1C3D58D7E1B079BF7B97A69719AFB3C8A395529590E1DDC335B192E469BE92C614258D22A107C5E3F2798E0167698300B9B4FD3538556AC17946DBC510A7014C55F80197A9DA590CEEA55AB0170FE49B6BFFB82C9A7D58958F9CC0696F322138DBC855AB5A4B7EB21A229E3B11A214F1680751BB450A1953FF7AF7A764E04E40081AA9AE08290A494BDE110AE0E2A8432508AB163D245EE572E7F0CF5628EEEA339E0A12D81117DFEFCD347734E501824398E1E7ED19957CA67EA88F443C41A65B014476574DA3DC52A698BC9CCCC2EA47D31AE8FF2726837537644837B7089116A2886B67FDFF0E35708F151AAD2F6221D40264A4731E864A11BEF75AFEE231BA7801179F838D18E8271D1C6173D16B0270D7DCF15AF3D23ED568B6E7E8F478B87C98EB1118835C8D7F03360C248424C65F06C6A258C6601B1DF05E25002C0F9163056E4BD469F074B417FE13930DD97C4D3CD76DACFA000FA5AC4852DB2F22B522AA6598E7AF33B4FFCAD07CC05029391B8C851EC8FF30D12C1630CD8B410ECE3935DD294598F48D77F39127D567BB439E5552BB0C6AEB3EFAABDDB8D98922D857A13D27281F5A77EFA50C3ED4C02DDA901189AD9E7246090140F45D97C58534CC8FE09364E8DB3118D92619F75F35E03F896D972B3CC0901AE75F5BA0F3AA0EC113AC240CD927B7ADE6A107DB3BE5B8B27C760AEF45BACFEE6E83FAD711FB1AECD18F33E3353036DD26BC3CDAA3DE830DC9894CC6E9C2736D64D1CC5C62F21F14CFDCF3B25ECD2ADEDEF285727E2B7E2A8504A43FEEDA4265A0D85A22739226B57E2CAFF11B104FAC2AE06C9DBA118AB41D1600991324DC4038B6C855FC189A4F1449C49BFD2E5FE65A65AD747723FA0A0EEA409BED4ABA1186B25E239348F6B6894595B9A57CBB4CC5EB8417627826177910F8478BEF90D97E11CA4E10BC9EDCA2AFF7AD36A3C5B99E2AD66E1EBE111CCCE27751726E7220C201F20615B973FE9A68A98D6BA12A2768953290F2630944ED9FBB3B32B4FA7BC2504571B4BBCF53B100C2BB787E0FF54C48B2B9D970FACAF669BE9334E97A097D0CA8283B7E5935B8097C5314F00BDD286ACFFD3AB7ED0A6C4DD5A80A4E1022365968C3FCBE1EEF9C5744EB04B745CC3BEA4993903767951C4CD321F02FC02587D59A720220116950A25A96718F7025F667D64FBC22D2F3712B2E1EF3E2CF1E1DE9785CA4468ED592EFF21D72763E752C5597AC8E570C6D01D359E11612157B59482D5DBDBD7A973F93B106C97677B789CA53264DA8891E6EBB9C707CD427877EEF165D32974FBE4A40D235C3EE6F3326FFF467A222D99F2C3F284B59BC25B64AE774D13E64553ADEB6D360F243D28C41DEFDA4B9D780C949557DC9736A9195A19135AEBC1CA41A999C7E17F6CDBDAB1B1F4FC00685865C18E3E06CBD266F713ED0EEDB5C4C285E62E21B0321357E3F7899F6CC011048D40DC9B7A467E16BD4A2B1E5AD65AD378008E03825A93F56B79C211EDA6049DAF6636A6D7F0A6E4473EEE8524329F9208B74E07A50D812EA85573FC3CB3FE057F237D723CA40CEC71AB9CC65B07A4022FDB4B1E086E06D4AB77A10E9BF1195E8BF69D375AB8E28D893E3600C8EA80E37D45647B7676F4AD063684DB4C83CD2D6D902DC41E72EEBFBD527C726052C4F8024FB8CE91AE9BB42ECBF33297CE70FFACBE929FA762D432436BC95320407785B181FCFD34A7306A6786B21211E320D655365301A9D333BE6C19ADFB7D1DA3222B01DFB75225F95B5C9ED43318CBEA4ED008DE37B397BC8B995736A669F16FD9BD9969E36DDD8918D5A308C092DDA8902358D6DC4A19A94930C4194A2E29108D72B1AE9708DF26CC8FEF3CE143230E5BC39E1CDBF0D4E1C4F44920CA32A4BF0800ADF277282A5C0C81EBBA2456B5681A6EBCAEEA4AF89A1DEEF32F258B67EC250BD667FC90AB6F981116F63747626782C334437C9EE31D39DD2B4EEE4446999E5B1C257B390236D6BB4DF60175D648F19A8FDAA72DF7E97F89E12A2395D6B8594650E0A1172AF6C81131EC8B4F617C858A34C14EC606B1661BC61109F6BDAD2DD18EAAF4BBA1462CA1AD4CB1AF0298655104E75F292AC072EDCA91AB381151196C8FB2CF6C842655EC08DD5300803407CE471FB2012B6F31153348173C377251C4AF7F93716D4A5033BED656E141B2C4D89CE097ED2D7FC2876E1252FD5981C9508DC8EE6BA9EBC7AEBDBC6398D931CDDCDAA80E6B4F0310FDF90EFD17EE094BE335819AE630F7372E624BFCD486E6C877A0909AB209DA6848D05AA17C494E9780CF42A646362B8F928483D980A844763103BD7FA5A3DAB89A84D903F6D1D69C210336DA48ECD91B823CA30FD931D283900B4DF74D466E56732B38C75C5DA62F45728206AFA7A41163DA431F478328AF51F8E79065687F9D00D527C54DCACAEA05877C9BB4D3F4920547843AF6EC0E7615306585AF9BF74751B222F69E85B9C877E77A7C92D90DFEB198F339FFF7C7935B0A65A00DC0126249B18FEC184478EA03306EA39A081BEB69437E0F190AB307D29C6FD44AD7341A399CE71184F7CAEE85FC80516DDD7AAA8805E305A06A7120A1403FD24BBD338FE5BBFF20CEE42BB08E9BD7C1C93492128906CF3A4A1A7F67EBE483ABC005C5142A0412A4B3E406A73AA051E1131C4CB09DBB06D92AC5B701EE98CE73BB184A2DE6530C961E7758BF34DB7F1FE7AF9322FA064D521962B6A51CA60EDEBE1F7C259720EB42C77841D3BEE6ADF9227EDA04504A5E4F80F319DD93B63D21E6338AF0E0462BE883E2E8144A196F6B442CE2E93D93867F987E78623D58C742F842BB4167956369422C65CF91073C9E1325138057C59BCEAB5462715E9568237F79BFA9E2F108D343155871DE725C2B448FCE15CCF2BBCC0374EA14F8CD1A9E1717020A2F556608A4D94BB71E8494B9C8D997A52939864A48DD05AFB777B726943F5F6374D76B03B3CD9FC579EE401EC24C46CC7685C011ADC3A5D58A7945B55AFC5A86ECAD1418F8CACB316628E11867D6835903B79A47A848D0D7D24BDEC68F3E816AC4C8D013FDAF0CD6C67FA7D7269DBFCF553FF893AFB59F3FE34B8FCE342D14EA80A268D6D2E404FE2F1666F94E7384F87B77DA7118591D1A56D421A947EA8924809889E5D3373611500B39454C7C649499936DF6D802DCF61F275526FE4CEA8180CCED2DED091D24ED4FC973C4B7BE16D8F5D036CABEB64BBB766B91FD48D5C151CC3412F33C0839D1B2B488321F803C5DBFFC0BE6D87F18561EB022C0BD7C2522042F212C96242E3E4F5171031BFBBB14C62569BE70C10C7BD4E8D87DAF1AD976DFD1761D5B0686D95CF002C846308BEBB3CF7AD12C6FF29363A59FA78B864D25B92D090575707AF93C2402991D403263E2305D015A588B075A40C0E8B70A47640F693B540F06C86593A80CBE63444CFE56ACC92E2162AEB62EC59C2F56FF04DCDEB74046F985E99E15AC412753E0520D7DD5E2822068886420CB0EC2A4D433A45E5FCA7EBE84C641EE4FB3D16DF487DD0C71088E97D5F7352E40D5C1FCFA88369D0A6FF03C19B474AE0A92A80E572EB2AC15A1C48C97BE296DE6BE1D604F7E9943389C201C3829DB22E031FD366C88FCA3885BC291975E184FF876D6A8E69ED9BF063C17263B84621A4EC78E56A36219A06D841ADED0348EF0A843D0F05CE3F2D6FAA5A61B2C6513EE7C54377780B0FD3B83D230B2B45329DA943FC4A351B7B8DAC5B9F56E171C4A6EA0BDC4519BA179351E51840066175486C8547945C35164F4A1A35ADDE4F7A765969339F7A90A31A8237A3F1DDF55DBD314B28F2139886F7C9F8E71F8B6BDEA32CBA0752A93EF82A383B77F8D7F9F65FBA14940D8FB1F371C42B94EED43ABBF4BA99AC50D0976D23373A13C949110AEBD85C84E1424BCCF441C6C420FF6931DD29625BD507D2459CBE635AAC97635232107A15E949364D31D6CB3BC54B001EEABB302EC35CA98BB6991192433C5DBB571D31FCF041458E87451B42AF4A57E1BB9A36D5085A27CA8158AAFC95DD4AA580C849DD01C75CC105EF06BDC511F310E023D4512B4BBDC1A52AE435144274D0ED3209F7D1DDC569E8A39E162063EBB66C6EFADB6678527396018C0D45D06C04CCFBDE8E26753CBF8215D5FEF582948BDAC96FDC8F8B1FBB50868DCD837C3FDF1BA62170E084C756F7CE37A49B8C30DC696BD6CB20A2E4E8C2C5B2BFC8959AC6523B8D00F649290D8733E3D7C187F7A35DF90254E754D013C105E7BADED43F50B92A083CB6FD5704E7B1965EB9C68BD73DA23A84D909DEA1C07E221880C6A2AA27381BD16EEB8EE5EF28DC4D209D3F063D06C6F47E91F9A5D268A9B7A9E6A199F07E51C26BC7B18CA4D0552FFE00B119FA439B697FA8D976989B22ED032DD0A05B0EE395CD9C0D918731128948A218EDA867326EADF92F7B3877AB98DA9BDCA10AD1D987687F3C65562F618FDD88F9D1FB77502683D0494446F1600CB1E2F8C8E859553F9C33FECB6C791ED30696BD42F6E86C26C3737D966E2D0532FCA3092F05EFEFFE54E6A647ADCDEBE37B07AC9C0461D7AF1496C054F61F98AA5248DE0EDD9F7BA061BAD065D35F1ED8A695F050A0B30308630F771CA3B2E99DC0D4302F94009755EFE16B264F8A5597C650F9485233E54FFE78D693CA7A2F707086676A1F8E50666CC0AB2D53A2E0C8EEC8A584C10CF810CC82A5233896F7285EB512541C2C08516AEBE3EBA80FD588ACE8405F874C58CF00666B796D3441721CD633DBBE109749E36713ADD1C8EBF2D4E9EE382880E4C9B9ADF5BCB08EF0BB98E758407EDFA6AD3AF7DC3590BB374B9554EFD3EF09C81A4FFE4C74FBF4CE96E690B1A7FDBE9C8821D945DAED77B8F8065876AB441BB73B6CDA2084D2CC9DB5C795387CB973E9CA740292403E0E0626FCCF804BCEA8C9233209A41821C33B52FE08F081D3C2C520EB3070212437FE1B0C3424E20D51EF0226D852438A5D803789AEC57DDF882556B8D9D8BB38D3ABBC15D579064C00B0F18BC0203CD2610E0DBACA6CB1F16C2F60183BEE826A87A3742CAE623B68E96DAF01DBADD928FD31DE4DC6C54A4B8EAF7E181B1F1073050682A5AEA4218233332B9B34BEC4596A0FAE044D3C8EDEC87C5387353DA39E22AB458F1EA57EBE6C9AF47307BBC2D406011D271D4244CEF2D99B94F8BD9CCBBDEC4929F0FE8FD07E786CEE677DB64DF18F6E0DEB8A123E2C38BB330A9DE98234C429B5F6BDCBAFEF3BE9F073CF70F5A9D0D2406CD46860886916A8C6C5434A9BCFEEEB892682D51B280250E999BA3A4D5A9FA4D18A0592619BF245431C9D9CFCF0334E74C1A6543D8B6B29FD9A8E3134B0605C87FEF4AED25F00655C78FE26586D3D611EE5EF57E6CC57DB1EEDEFF5E88882D155341A048B328C8EE37ADD696A553296FEEFB851667307D4E9F3CE8A46EE97FC2727530AF7AD3525630E370D1F2757E7EAF7DE591E060C766F42FC4B6212EF1261873F0AFC4EC734E52A80D6F468520C2A001EC56E790B834C660DFAA857FCC6B703518A02385665C09133E41046177A543AE7405B6BBF76162B321F0F3B62C9997B949CC00A125B11E39C268D230A5693E4C70B9E0DE1DBD861DF63FED642567412E7395529C9A93FE332D7E5BC9278844ADCE508B87B2D81B426C37D9D86567B4F44D295C5E00EF32AF535A64840035952F922D70F2A585571AFCDCCF2754D040572E62BDEC68A30A965CE8C0B06BCB93888B8EDC2A1893F51B897A7D5DC7D6E97E3BCAAB3C4F832BBDEE58B615E644E6080D92B426D8275A2E7690763D135B242102C36AE40E80A8857B3086916AE46208E50F570AE2C73EE62C23FCBC2F4841144E5B06E3D89EAAC4B54C932FF9C57270932935F7468EBB7A29E3D5D0BE2E9F05E9E054C73A4CC4034D3248D2C730CFD57402CAC83853EFD3DD5F7CBC3B49D728A8BD2CCA6EC901D7B8673760B08995D10C5B4ED4F706DA8804A0A29908EDA32F5273CF4778E6424ACEB7B63E320540BF0BC130BEBE6E00E4270C7D4EEA89620845D67B4D999DC8B38C01F907144883FE6E2D4FB1F0F4EBB117AF927CBCAC39CE31126271FB24EC33ECCF27AE1C7E2C1CE5FF9C991ECFCA378D1A27A8B2853545A16A51FBC10F2F4B505CFCA6D7174479B24F074916914681A8A8571C60E93D8063DD1C63D73FE6EFD6CED2B61A7F5B237466A4C316DDAFFD2A0D06B698CD2D2CB95DCA34AA88FDF7C85D9461DBCEED0FEF53FFB91E21B260429588C1536A435797C06FFAFBFC96806200BC132EB82306303F4C43FDC9B8121C21B633CB4CB5E14F699C395D319999D936084407B8B580708698DF0231FB717D4B64C6EC32309405DC626276995AD0DF2DFE6825DCA7D70E5AC5D4C535641E69FAD210FE146AB7F5D4D0CB53327D8C1A38165D2ED98F383D8ACD70F58F0EB88728347D456BF9202470AFEB0F685A79BE1FE095364CB4A62CD100C85BF4DE855DE567BF2AB75AF50783C4D33C4AC18DA5253EDE2CBB6F774A128B09170D7FF5FB569235CD0E41338CD82F55364A0580F512EE035A83514D137C99B87E067C09CCAC3AB3A2EC4079458B18FC118191522B50142C0846E1597296C4AE68CD91E455EED674D351113FDDCF647F068D6755DB8E81F93421F781696559F5AC5644A700E385FA35705C7F9A13B0CB22B54066869E6F16D232BDF480BE19910EF5A1E780A8E59A3ACC8AE7238F7FD8CC83AA4C7C9CE173704C9B90AA7932CE5DE04BFF1AB1825B659A82D96ED1003DF06FD8141C81FBBA5AC033417028A108E9F1632110F8A187B2B585757A4EF960BCAC47A2FF15E879DDC6228714883CC947CF97FA0708864912BFC1F0B1AB6861BE19395B9EBCD11B261A0733508310681D77FC3249B198FE5FB4CD895FD1059DB1F04895DF000CAF10FBF43ED4DDD0A67D81B0B1391CD2F1327F1AE261440685EAD7EDC3109014A02257DD6111572A10382C7FBAB5F0EA2E93273A8350AFAB230E3B70309B6F1456B2C43B0F9949B8C5E3AA7235E7F0BB623C672DD9EDB1D85A575F680772F80568FF96348D63D35B66CFF93E677ECA09B35E55E0E867E16718C15F9875E0EFED11AEFCEE01971760496958CCE46309F27739C27510C00712BD08BB0BCEDFA272A87FF47E6AEE2DA63579CE1E4B8B4B5574EB0B5AD2745DA2E4214C8656F5C4A03998F57EEF40E66F95EE266EBE8B162B56FCD87A8D29038F768363431D734E106E77F57C07FADD813A4F0A8D53457E66351FAB0E3B5046E265047D926F0A6D9FC7A1CA9C0F8AF42796D62D632542093EB029C53924E97ABFA0AE7B82BEB0D0F8488FE1859E6B9AEC40CA4371B0ECABC78E443BD3F047390F159C49EFEB9678429B1EAD91F9C7957A74F62174E815948455AE9CDAA07CA00C7B83AFE23AF313A32E14BF230DEB1175442EB854063B4055FBAE955FEECC299158B050C05A2618909A75FA88175111976083C7C657D8C95993E1766A9583998235BAEBAB66753290660FD1311E8665EE0899798C080D02680C80ECB02202952D4312ED932ADB6D0B465EF640D06FFE622A6E8EC491DBDD8900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/FiraMono-Regular cguidfix
/F1.1/FiraMono-Regular renmfont
%RBIBeginFontSubset: Feijoa-Medium
%!FontType1-1.0: Feijoa-Medium 001.001%%CreationDate: 7/28/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Feijoa-Medium) readonly def/FamilyName (Feijoa Medium) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -80 def/UnderlineThickness 40 defend readonly def/FontName /Feijoa-Medium def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /quotedblleft putdup 34 /M putdup 35 /a putdup 36 /r putdup 37 /k putdup 38 /quotedblright putdup 39 /B putdup 40 /e putdup 41 /n putdup 42 /W putdup 43 /l putdup 44 /s putdup 45 /one putdup 46 /nine putdup 47 /eight putdup 48 /four putdup 49 /hyphen putdup 50 /zero putdup 51 /six putdup 52 /two putdup 53 /three putreadonly def/FontBBox {-128 -334 2318 1001} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF6DDB462BE17009F2F261B5320C83C58DE85AC0ACE29E3D90B1295618628CE6CF86E506265A524075CBC64D73877D7EB7C120B802E775B8873BBF0C51DC69F292EC74C8222E98EEB1B61B222E253CE88D13383D1E6D8BA85D3FC59C2B4B2CBD5D4ADD4C19305984F559F01473372C0C5D4DC96547235BD2DC4C7727A8CF78849D3368DF87533F6580207514F6673BFA4C8F84454B17BA1DA92D790298BF6AF530427BEBDEA4773D2F6051F5130ED1C8B2246BD6C0166CA3421C26BA386453EF5D965F3C71C88BA5B60A45C669430BD88C473E1B21A90F2EA649309393E2F16AA3F986EE1304F199BE2EE6512C331BABE351B0884A556EECACF770091CB1DC4E782899D63E02103AA16847DB49566AE28F934C5347D96FB081D5798CCEF5D0556532F59ABBF95D937799A0AB1B6AE47130CDE98F176A58A6E5FD04D09B3FE4472DC4545F51564217391ED6A7BA13A026CB37B0FCC347197C11AFF96AA78836998E1FA585829F8F2DF03FD09B58A5D87E970D2409C75597A7AEAE21F24A89CD08F4DBC4EB59025F0C79A12D01123A229829A11A41B6E15E21558D3F043DCFE79365745566F4A202F3DE7F2703AF6A019BEC10D967B3A35D024BEA962AE34289ED63868C9611DBAD3F96067CF8986E5A0073DA1DC9BA3EC3D6BB0929C0AC7A2E104DE8621B79EBDFC3E02DCF52CFA6A47C04F306F58120EA70DAF8EE1A9B4984535EEB4ABE6C452908EDA9492FD3CE87E7D320D065FFB4E6AD01D102C104DDAF73EB8EFE373DD1ABBA9637C1F07EB71A49239E748B85A1EB807711A8C0CEE8F6DA1A957E706E56BFF82C7B71683F464783AA3503DD646FFF8CE721BCF17A58ECE301743BF0ACFA363A13730F4F025BC938832482AC1F5541FF2408ED3076DBAC1A2B9F192E786BD108922ACC3D5A9FF47537E303D1BE43C196837DB83FB71A3502E64077B859220DFA7F75D08D0A2817BF8AD39F3597584D933F10E4AE457F65AFF1516DBB8D28F3AA6BCFE7229D935B1C14F465182F40F510E37ADF09E4746ACCC69212B474EBB26D3106F85862F7E9AC25EC762271FE6E7963BEF872C86B5C041E3C5DE7E3F4D0ED5012DBFF0C06745A36F338BA1B2D06F94C50CB662BEFAEB6CB309ECD709386464507AA21A649B383CCEEDC1746D5395D1F864836E906AC688B105D036ED5695003C80979B75E571B02088EEA5C4249B79A15CC9053AFEBD7AF7180344C3C5C34C26329D2EF950C802021D8CF806A7858832EDCDD6E0F0C96865DB06B08929A76C24E2A764F6D0545555C964294D8D8CB7700F48C445F0E47A3F8767191F9C831CB5AACB3425B95D7A30FD186C5FE883AC6EDCF34B4BC99E2068E9765A11BF6571CB41A13751D070EEECD8860D8E574921F4A4E2FBF22617AEFEB9BF2560AAD6A514F38975761E37E4325555A967DA6A55CF50E21A48012BA48F2D09AADE219D797A04F76D9F35411D8A418D2EEF87A09FA4F0FE221E53692AD78A0C266ABA4F0434E62E85514AE883124CF5C7D4B92969B61D4FD177CC579E7A74A5115F062E934253B7F644A9DB5900CEBB12FDD7D43E42A5EF32122BB3E55EA28719A02986F99352F74769282D6E22713A6BA6EAF552C6A4FE51F72869E0623F147101D0DCCC1BD31C98622B74C08B4F9C84D827332113F63F412D40DFBD12C3B04A0F2F75DC6D683616629A3874C9F9BC8B4B1DEBEC59B4872422BBF902ACB9CA3F0182CD3E8A0F7C1B5D8E79F91967AF010C8E3A8931E1E4C4655CB0E78BE6243073E2AF3C3E45421BEAEDC59346C4B4883F1627E3AB91BCC071F712756472D87539338A1F065B45ADD328198AAB1CBF6D6DED7BB6E2ACBDBB432B67FCCE8F89D6308BA2B528F25DF064116C44390309B45E8B3E7EE8B40254CBF411B939931BCC1F96F1F348F952FE0A91C9434EA6DE2E55C4A26F081CB6A1F510B627EC912BAB1116E6BC5A5CFDD615ABDA5E3E617540B2241F435B9E207C86B71C70ECFB3CBE61A0607AFB88F58CC4A23E0C306776ED13E24A55CC3E254820833A28CCD16ED767B4C6CD3B0D0ACFF9303B8FE9D2424E0860403D1981DC44D8481E38C0CB9220FB507E805B19DB72BEB1818BF3949536806AF8916FA731E0684E0FF914595E406538608472542B278C3E3E9CF8D8F7FF133329A7AE09D728752D8497A05F2E4A509DBD5B97188CFA940F61111F7FFF5B22B996BB87ABECEF11A4A831F2DCE6C2B39B9BF9970799F0C499D3A5D842133CC8A580B40E0062C825EBA6714833702BAAC416F8BF1E166C43A66B05295793B2C5CFF1C9417F2639238E02DC558182A0B293CE622371684893FDF241932B93DA4B590E997BC8DBD6491B62F3CE3AF2DB2DB24160FE5F1A32803D7740B953EBDCA0EEC97F88C8E15F1FEB196D7FE680A21936146FB962BABB0D1F539ADBA33983279C5549FD41EC85A6BBEBCDEA0C041FFA6147D719C88023003DE7835140251BFAFAFF165BCFE6CE6A83780BF63C09D31B83F46BE10A17DDF581E29607AAF727E065BBD9BBE1B48824010E32F09FFF3D5BC7A091AB99435D83C8CB7CED460661CA08E33DE376C99DDCE2F1CF786453C3528CCB85CF6536A6A42D6C7977816D54896F21EFDBCF62B93B28805B8A6A1C9846CBB5B1D5FA8BFF62AA395D4875EFDF3D9126520E7DA1EE04D0B4272BAA0C1EB73AC6E0B049E39E7BFA09595BF5ED35047E38B454E6D09556F79A1C1757DD7ECFFC7AD8A1853D995B03663B09267BA5A0E0B98713AE0D86FEAA12DAC19BA6962541E76C8E2CF5C3E948F8FA3A67C70AF1E9280E088BEBD2542B4648687F4638E2F67B7FA8AFDB9A0FA2AC835E48DC55BF17F70830A642F6E808E48BE2E81C5C90B663C74CE3E7297E62665005EB911D062A3EF395ADB2AB789BD8DD380B86965F2FEB804AFCE3B9D484F05D91790135DB64722238464945A7115D4F4ABF0B77A8E814AB159254D07DCC630575CF98D24BE1969D9DA99DF3AC840DA6650F6794D9634E89E0D95E12AF2623C7F4D0FEDD1515B8BE8D02DAF8375601E3615D312D1E927E0FF3122662D7C9A5095D2714B0E325AFC39B59DC72FE08CCBD78E645142165E1896B29E3572A3B5047FFF4FCBAD24A82BAFD5FD93A4B06A66150EC6753656F030DA609A3F2545346A080DAF95C1A6DB712F3E9D37D3BE3BA83066DD3C563A1109471ACC51CDD2419CE5D2B25297E046E6A49D6D9B7AF796ED1AB2C21E526D4AC44D75D5673010869FB943D0ECE8B842ED80A85BCCBDC7305D5487F437A4076D99880AA8FBD7033637062DDE606A54B8EDFCA3893C849ED5AE4A20392C036754F092585076FEE0806D329E9760279D1CC4C9A73E1576A25A3D9D3B8592CF42725BFAEF36F0FBC05E79038BF0E69967A2A08DBC36254C78A6E805680D2F737CDE461EDB0A291C88F7713EF98BAE84BE9DD4214DEB231734E54CD1FC6157C41FB273593B1C71489E2C0F86C1A44BEB7B6B3FD95E218603CC41EAE23391B652439521203B4D70050AB1AF0B3D53F6FD22D036A6717C0B7BEA97D8EF03AB08C0D2EE7BEBCC7319A9F1D7CC6A251D334FA247C246F1DBB6A8FA107363C2F53E11B7AF54B0FD6E558D2502283264264A6C27EA22AC414D3FDF53A315B481CC86C7510F50A255928E8DD730A38C4CD3CD4C94092E6FD303C626B3A5F583105E511204D5A36107D6481361A339E182E8430F74BA442DA7C56A56362CDDD9E9E4288750FCC95F0995FFB26E0CBD9459766DBEE23C171D0B4EBCEBFBB956934B249E6DDCB463413B6562402437D8809830A040C147D8550C2214974E70BB8A3427F16D8BEFEFD08C9FCA8161CF6B2CC9E8A0B95FE4484F47490076F25A07992565BF0C28C47E5C8FDC4CE0E2C0F548196FA91313BB4B77C95766C90B0970751ADAF11C39D753E03711495CB41742BAAF3E244EAC38B667D2F3A8F8C96D54E17488F4EDDFF53D6419497A0E8D42DBC86715E8A86FE0F24C4736BCC8B90B28B5485CB76E326454D73DA29189F70723BF347E1F1538E1467D30F0CA77F41CF405D25ED4EF56A17AED6A0CBB200B8BB688ECF0F4C28259F53D3C99736648BD70D566DACE2B1E22BB36A41AC69C46C54F369D37B017D82B20A4D33F348913AFBFC09815B150E4CDE6E86F80AD69E65CA02E2A14B964F555F2850C545EC88A11D1F7D45413F421600BD61129D5B561DFD78B4863DD1E8D6C481299EE2141977BF8A5E78109E6112A544E0C244DFA759F85FAB9D484610DDEB7F733417EB0B9C9BDC14635BC2633E566A83E387FBEDBC86C7F46A4E5F9D5CBCF546CB85D0996E5815BE34C21E41604B2670DE39124352B58F0ACFC2BEB2B16B514D1E59A91E42AB0F27FC62FF5EEB2470EF36A05978A4166843F7B8593520976981C463384C68C50363B05AF77392571C7703735CE3AE0F18E05435EAB6896D47AC4235705B778713E31F2C5DAA0A3C6074EF668BB763AB30E93D8553D44617DBFC74AAB870CEE11CA2448425374D082DD32B7B16899B2DCD82118E017E73CE8D15C33992267578556A59ABADBD0D63AE2788084AD486A6142BDB90A34C2E2E5746AC3219695E624EC6E91B4A074424EF14518A357084B307A610EF310ED6C45ADBB768FC0E9416EF28D984E5525FD00010CF4DBD91C2DB0C5A8321516B6C49D7A2C8098C3A6ACF9A0B9D25DE539787FC716A58E605C9C68F7612B6A93D8504C45ADA716B359FCBDEFB8F3CCA88CDA25584EAB08839C7F41519472FA0E98F75284F301092E36E856851E0513BF01438F969ABBF0355132457BA698E991FD64CC296D56EF16F17761B5493E5D1F79566D5407EB84F9F539D138E292D67FFC6A9D2DD97EAD87B51FA17ADE5BC622AD4AB355D844809B944C3CE299E04BC5CB9178DE016C2F8D2176ECE047DFFF64212220F4C75C705C7BD1754F7263B1088A5DDA386D7719AF65309BCC85D4C9E0470518CE1315201E67AD069D2F8BE433F1F42DBC1E5DC26835DDE2656FDC24033277892425EA1FEDFE1E1A242DFEC4C2419C24E67C1C6B2CB92DC89C4974A4B255DEFA071887707167C87D9B898A55A979BCB0BE0194429DA46FDA439DFFCE4455F045AB5853B11AE25ED63883B03C85EB95D8D381508D81C01909E09E16790542B9DE47448D12E26505F98EED13D9A413510BC5B3D3DA76C684B3BFB1A01C6622FEF325AEA039C797963B109ED27D9FCA52CEE5F81AE0B6353660A98E45137A020738B093FCE89BE3E6F03DBE2D8E47A07B5289F08BEDDEF4CD04B715F4BD6DEAFC39916D5084519EE3E88C593DEC6B933ABF6BBC29A2E4194DA9EEBB6FE4DA1F06BCE4C6E360251FB98830C14E527679EC03EA2CCEBC001A3992FCAD3EA04E4F887032BB6A6EA61B4A6C8189A3113B9782C347EF06C69C5C4A2DD0DA13E0E5748908B0FC1DBD3636C2C056864ABAF2073BCFD3AB4D5D6ECA3F5823E3363E4F3830AAA6DB0CB7E2DDABF9FA59F758EE982DF670378C65794A51B30F451C0DBC70D5D0BF3EE574DD2416E7620D7E17546B03B3E3983C8647FD4A2236629BDDF01D8F2BAB2E7C3D9C275BB2A746807B9A2F11CEFEFEF44B0F0EC1F8A4F27F44FFD4FB265803563B50A2570F7260F085839705888E03508D614F2DA9F007ADDAE1F3552B0B867FBE4CE17596418DEC4197F0C6A11789ACADC7172AE33271F8ED255E16660EE4D82F18C62656C9919AC9002BBD600DFFD93D95C3448DE2C9EAA5FD707296C4EC7C91297C8EB75BA5FF96E0C8C4F28DFDC01272A2979993B1B557E2846D8091E49ADF9B9C738F460FFEE5F70AAC1FA5432BE718F19B2B0A7F60A88415616E54ACFC2EB9B43E2CC17244E64922E3E694C14138A13FDCCD54C7B8FB52C0B1B1EC805BBF8CD03428085D3D2F43B9CB7A59F8C485CF18B190E675D8F9C678638C639B9BBAA72447DCCA7623682135D7758D585838B0FDFBC6155BE7DFA25934F2EC88FF3C719A28F0676AD005C73465600B24DA7E01FC23BCE89D142F5C50DEE69B3F865819859874C9221DEF29FBF84887D713E77BCD8B0A5529370D54F4E36CA511E699C49685CBCA395045BC45FFB3E493190F163D0E0CCACA8AB221C7910DA5CAE7A13BC7250A87091D6DF72FD989914ECE1D755844B5CE1B616A94CF1451EA135228D2C195E1F915717CF6A12927358815DDA15A91CC14DC0559E317EAAF273D60E99111A056A86479FC2C4FC177C67EEFBE537C47C0A292155F0B2CB7F1FB6292A9358F730D97697B28B9786425439197F24A30B79E403765B1BB0645A530958DD4E7AA6A8B0E32180C5B809B3E6A66685F00B3E0015D7FA87E810E7CF265FADE549B98F02DB93D28440C221FD78A6B4A4FAECACE87744F68909E29997DD4C7F9B9D0EA473196C232C0D087B689081CF3CDFCCB5766546478243702CC3020E3915F6DE0B36EB40CFFD02873ED59064A71386C12B5908EC392F88F4F9D557AA45A410F1F0BB450718395B66AD745EE4E8C67D859196A07A994B84C1B39A1663E06C973A9A09DAC53F879DC93A56C1B19522B7B05F8F57B870952C9AADC6AB0FEA608810B56D451EA44DF8FED874F85E961AF266B2D3F89EDCBFD97D77AE0A0AB7D62C373EE1B9C5F8381E2CD1E321AD66D3F73E880D9E6E99A0A1EC98DE6D4718FBF132EC32D187E2BA24356199262F625EBE4D19C08481DE1185629D9ADB3A54DF61590C2457A33F3262934793E3CB5229FBEF040ACDF42804535D703BFCF17F70EF7FA4CAC023E83734624D734CD68F44FDF8273231A1574A566660E47AE1AF91995542CE42DEAB65D5823BB61283A989C5C7585954A7D7F3AAA9B31004D2CED7294692DDE45EDA150CDD8F9A06F65695CBCE02A0B9B055841CAD5C8C5FF6A2E2578897BFC11C6408FB9497F5E0B600D5D086B1B53F4A694B727650CC8969D6DDEAA16F67A01872893E08DD68E929166ED8508E38CF5EC2902FC677FA2B8AA8BB41B070D108AEA340A8856AAEEEB3DEC168F8B3B680EEA02BC353FDDA083FC854E535A1516FDD32BEEDBEEB9D3F50A7E76D6588D0849EDC4AE268150EBF60AFED1A4B29BD2E6507408C40F4E38C13A14A58F39882F72A93554161124BB2B4394CFC57B217C790E3ED1A4D9729506F5965190237833EBF50650882F89035A7B9244F1763FE2E20BA23B0FCCCDC75E7D19750650153DBF384076053A5FF764E95B8076701AD9817B103DEBB6AB250A91A8AFF10F9C694BC0E1FB47B0540F40A4B7E54D4DF7BFF0B6773D593CB1E542DC0BA36CF4D88DE2152E34F3710077B8F5C2116038345C7AEDC3142ADAAA96DD6AFE45370DC2440B9A72FB670C4C0927FB2FFC4907D7F9181561F0109429128A6F28BAF03540F90BE963D2EDB55E11606F40EB64479EE6BAE7C159CBDBC805054E6312CEDA9F0AFE72642B915BF17270BEC4FE73B289BA5680E0B468536C835CE2E22A842DF7B7A42F819D32220105393C1ADEB8838A9370302C9010E586E9EDA7403E03525F4212966D6D7AD719DA3906D353ECF34B3A574BC194DF2B28F0FE88D87AA0C37EF8255F96F3D2A16D84ACB6E20D7EDE3296201170C7CC6D524E55201B42E17854783D7D9BB1B62B2F75F7D799E9353FEB130D29932731A7F6B17D8F1FF628230AC80524DBA407AFD30E581461D0359DE7D1FA98FD8ACE29D2E07D5D10C05453D6D957A92B2B253FB78070265B688FD3BB493A325833027BD93C858A6893245E22F5851D1A22F12D61B75EBF89FD20189EE83BFC3E28B40450C549F4B805123A92D174557D584A5787BB6100F4148C538B4E8B879662A3DC00BB1E1DF2F6C3F062542EEFDCC22065F9346AE55A5C37BA0C27A84933CFCDDCC723A92C5D81B3B8D5E7CE205003048A2CEA9A7892567BEA46F085267807AB95F76AFE22EFA8A4E60BCEADB30CF626F6EF303F4956C4866723D8C3E56B872575D8F99C8A98DE2818445DC7B467B9886C2F5975074247ABDECB5F6BA61456913C4321E200B17F3804344B8EF1014696BFF96ACD0CC11E08DE8481FF4995F3504005AC523A5965A1D8E21DB1CBDE46F5403F392E6A33AA2D76EF395053B83D42766D4718CEC82043D1A02E9B52CD6E0523E4C7C4D6D738EFEEA392AB8A872CD226AB9E01B3CA3D6749E90F3CB4EF1F97DD09F8F320B1DF57AF07C9F4B1C631DEACC3BC3149D87BE56450EFE98C0DFAEA3EA87D9DD2CC6026A37958050E43BFDD232BCBDFAFFE4D50701C3EF8DE91C49B07F341A43BA60B8250C40D773AB7CA0847AAA3B382E301EB03778C97F0B7DD905B0C50934A1C4A5098D6704E57DBE91D596CF4D3BE4E55C27CE27801650346E2656E9709ADB48BD4E2EEEE3DD2294550483B99BE3D4B899BC55726ABB601F1E5006DEF6400148A119D286C683DCB02696ACA98B2FF8E1BAC10A13562D3604788ECB7647188BDEA6600FC2BD665F9A500960A8F4974CF351EA7CB3E6912C818048BB65EE5DC418B34AFD0CADFB67F47D1C8E35898AE5B02506A42E55602CF6F1EF98DE3AFBF816D8CE816C936F361444F31D1B916A081F8D511266C0CA1EF1DA5638EDC8FC5D7FDDE347EF96E6E1EACCA9F4A4247B57BA6C184AB7BD5CB5DFAA7584440D86FC9727973544019CC2AB7C9F92BBA10E7CEC6D07045FF50838267DFFB55B12C409FD2666CAB9A30B7C12A525B15A09E7433359957252EF438FE41FBA88D49FE8C1BF5E66BDFD6C67BABCBBF598C35F713DD277FB02CD31AC2704D9CB29F89E7088E3EA2278DCE167AE077DF237F40A4AC0BF8DD8DEBEACF48DFDE944FDAE10D4BE77F410C7C86080B32924490CF0F25A74600EEE27602C7F54331CD813D24907E65A0FACA637AEB9A2FEF8858AA4C7EDC768FCBB76F14613356CBE7B82E5ED3C11EE8E5A684FB444927905943455B0D7B79FDC2C0215789F818B47B9AC177AE447AE52ECF2536FFEC138762800D1E883ADF4AE0C90703ECFDE96C0B3E84BB6AD20EF0C6248BCA3331A6EFE827C37D85D92C91FFF4961B2AB57ACB45B1045A890B1D98B61BD7B827929AE24C35BA3AD0D000C82DA27BD5709676C1FC3E73728A55039E4275C17FEA01C12B8C542EFE9B46A983A90A44D7B6BF787055CE0DDD6B7BCE511AACF1BDFE09CED5DA458F9E149CC8ACD6B57A2EE64E837C2DD38A25D85FF00F917A5514FA7C85D1EC030575B3FCDC611B4C5D76D7BE29A1D113559D56873CEC1AA41ED6A53B83F7A328F8E5A0DE111FD33DC32A6D3E446E4C7A9263975B9984BD751116F1B272E3511CEC17270202BCB45C94224B409396755D8F1AA2728F031FE226E3BE8DD70BDEA675CD75A5A09D5759E07BB4E44B5AB85FAE14885EE1E9A0F6E4161D63E8D1EBDFA301B2A1263AD7721EA7C05CF177BC3ECA3A67E1E5909D6A79F02BCB6FCB5A7034553A6FD70BFB5F02AE27D3FDB2B979698C3C37C0C2BBC126CC19368A68CC8821830BC09BCCE97A869D8B880E2FE533D7B55EB086DAF360CB5AB595D7C5812BC3FE5BAB07E236C33258644F8F441BB4A96A77A0A8A6FCD4E95D8823105F30CF493CAB2481A7540CB61FC00CC656BE8EB731A78D2433D51252C7F144443561944F0D23C5B5E309CDFC4A14C0D479535AE3F7A05DF4CB0E596457FBA0F2497F07224060D1059D7D768B0ACD4A43923DA5495ED1CAB9B0855BE1FADD0B0AFCEBECA11EE19355FF3EE506D63EB31A4D47CF44219081489C9124757FF4568F9416F6ED408F57E018FE43DD7729B3CED25A5AA1330E2D52B20344C9734AA39BAC01E8D4806EB26F315D64A11EBE8DA91402C47FF6CA61902FE2995A1F3B2AA9428BA3BC1DE112F90274C04DA81CC95F93DBD618D0695A53D969765D7026D8CF0026F217A1A120995337EC294E13430C7CA1FC6587A24C1B5F06ECC05C5385E757D5CB1E260C28168AD5D14DF6432FEA317464AD2F2F3E347BE7A0537E73A479CAB46DE0DCE6B29741146F763978F736B827F7B95C1533474315D57D6009CC9905DB7815A92A89519EA697033110167D1CE19740E21C6BDA84D9221135459AAE631245229269D26D4895F44C28F1FF88E715B8E1CA526C204FAC9DEF13D3D8F3A2067169164FEB6E671ED30CDCDE34C7D89ECD8EFA8A0586778A1EF1866922DADE7D5DBCEEA15283CB44AAEAF550BFA66805C47740CFEB6544456EB7D4B2F3A5F9A183DBB2C578DC50873AE88D53E6F46B182FF3B4169AFE951EEB6B28A7F555CC86841E7F6BA882D76B159F1CF68B167DFA17E79D17E8B37C0172241234A4E1F722BC96BAA1852240EB7FAA8A15466810FE37337D0954DE293F65B459CD09B0C9EE95C4FC459F152EE736A04F486560C9E5BAB4BFCB4FD1FB95B3A863F90FB0C5595FE62CED5E26E90BB185AEAAF4E1B5755BFBA907D2784A3AFB2B9F77FF0D55FF114586FF56F02D61BD32AD315A589A9FC65BA110A24A264B025966086BF40E2E55D3F2D82462842F3A96C1E184637C62C7CC918A0B2EFD327C94025F97FF7F934EE95DF45673011D9F3D48B6C34DD8FCED82CA9863275B37FE8789F8D9D8A8069CAE7B40824291DD0B3BCB3044474012EF925777AEAA276A43F6758F84BA9059B0A5490CB2E68ECFB731D61E2083F3A63C9589E19B3E0765D12F0F81D383616F89310E56C05E086680C1C3F022655B90D7F46B48F6C771458CBF3D07AEB214C4C4E65F107315A5C42F7D8E728E94A1594918EF7B098874C34B3B958D7A789EE4ADD074312B5E9D46ACF556724C5B01DCA8A9E7EF0D78BB9C9BF64ACEA9F81D3C958D20266A6CD4900078F2B3BA74A0A52682A290AD42AE11F312344E753DFB1C96ACF49A7B230595DDBFCBC42B730349AFA55AC9C1576CC730129BE6DD3EAFF765B3FD315EA121C8212EF973ED648C3F99ECE23CE39581ADEBA283D7BFE7F3124E0ACFE37B81F69D04CC3CF2C806BB7A41281792467E725ED39E14598950E8B424766EBB82B7B83601D4F02E9DF9953B4C8D670A47D445E3504EBEC1206339CF4E3E34C2DF94EDAA118BB844182903669727F3B4B6DCAE56E9ECC6ED9F402CDD8CBE30011894EF07B24E68079B61C5FBEACAB00D7D747576B15CA216743E483A7096C6B22C752E0A89272AF4C40D1C2A27FF54832DEF5F19776D65F0A6D9E50089C240EF9D12A5F73686E1A867D649B845DFC9539A760BB3C455AACD634C4C3656B228E43E0A11380C80DF01B30D65E6C62322F20E421603D3065DE649A1F53CB3804A8D329DBF44DCBE0ACF46654D4A78C6D43170D57AB419D9B71F9338BBF6572250BDF1C9D7B01E97DE96BAF33F8EDE57845641C598376F53BF51D782D260BA8E28BE29FD2C11747A02EA5BD4DBD01F83783887492DF82337634688860C7C14E4F4176136E0099D51A724AEED802FAFC846D8E7DB5A2D277F4AA850D73A6E61207B79C55CD708992C95096C88E57C3C960727F7A2EDA26F79B096DAB716D56E4B29589737F8E94CEF0DE18E3ED3B060EA6EEA537173C9CC408530B74D5284FDF19560CF7D9EFAFFF5D3A47FB1489FA8B1C0EECD91881D79A73BCF47C35C4CFF35B61ABD14D967C4610D13A544E62AF97DC27BCE31C50AFC24F4DA1DEF7EF2084637F8D5F228FDB2AA8399011C19AD68831ED587CA339827DA85E88618CA3C0174501AABC177EFF73A3D40BF6715CC4B98D6F4DA996D56AAF116CFA3D8749812C21F86455D774EADCC66B7855BFF9457ABBD33679ED1B255A69E8D61941F799DD45D2C7148D525210CB71ECC28BA5D9CDFEF0B780284182B43260118FD2073342C9FC75F522C486549E510D873A5C8551F9917FB7287EB5F8F267AE4B8D1D16FA85F78723EC76546EB03C77C5D7BFE342B86DDC6A21D44C00D26869DF71B5E3E67CD5452111AD0FE46A986C664DFDC3C5ED0992928F2333A174276724D455F21F038802BF1D82999CB598A7D61C2E2E30CB09B182334FD04FDE2E5E2B99453512D75C3110950CB58F5EBC2A43BF1BF139A496E3FA5791C4B0FC3AA8DF0F3D58864BBCFE67237F36826BF0D033F54D67F237BA38D9D14755B9EE327BBE88406F0B9864C6E8EEF3D2634E49E45DB1C10821871BA28F529CC96BA4E571E1393A5FD08488EC8D997821F1B5E533EF492EEFCD4AAD62B20387CE984B94773D9061BBDB88A8B34BB7E3CC62222AA59FCE72E795524B28BA3630E52EDB3C0A1C532DDB438571F3A86C4541911F54201A11947DD9720D477BE43A1BA99D5A3E9D62A994BE3A034E093D41C25095255606CFD9417644025387E01897238AA1E5F22150358332D85F7CD080DC119395623834594FDD24D0ED0138C1BCA8E08769BE27A5E636E19E453E02E216D254DD5957DBBD739779335C469709A6476CBF11C9F8BEF5F7390593DB6DF0BA073F41AC55E15DB4F192AAA0A8253B2765FD6D4C4BCCE49AAAB119915D1A8320CC08774054C83655B9E3A8F986B75F26FD2709DE66A3899D0A629DE00734A6973D17366718661399C04A86E2C3A80F82A2EA62B643E4F592622EC509AA7A2D6D007FE0611EE4FB92D8D96F377CBC549EDF07A59D2058EC6951820158D1395D145BDF1F4C5BEF5A58984739B4B857B419F1CEC54454577AA50B5958EDCF1287BEC7CC088E4BEC9B24FBE8512D73A69253779EBF4EB10DE75A92861060FB67486CBBF2ADFAE7E64D495036141B95A516AD73418D623C18F872E529CE1BD90ECBA53D385DD4673309B7350A11D88EDD0465ED5083D4B1576B8D095B610EA5DC520FBA8207363859AD334B3222830EF271C814FAD30349E4BA1D84BD94AA34C21BBDB2A5AE05584322D93B4D6A6EBB9CA111EF6C0288A419F86047DE25ECD788300DCA9A45DA020635C962328A36A07A78EE00BDC83A7F0012B8323A8FA9FF775CBE818DEC79B9D50E8982B86D2C1208623163ED2DB6363A14C4FA03422F926E03CC709757D610696E4D663A88389B8D0000DB6A7A270F9641C87AAE998CBD3CDD9E373ABAD2FF585E54F8E6F2DA92F2C1DA3752B47FCF2C8AEB69782A7EA08D1A5B83E9B08159140A6E1333CFCCE80F3B65543A9EB123B975C689D72357B82A1DB149C40D3350E49686C53C3479A2A7A40BD0945046F6F21687D9CFEFBD5367AC52EB7F96A9E45633BD1304F1351151A9D3652F01E24F86229979755AC237C138A3222B91C3E6E2B00C53DF9788B4D52FFE4F0EF02A613CD4CF3D5BD26E77B65056EE18B7BAFF7AFD8FF64FB316F83CE81E6C030685E9D6F4321CD66CF18E87144982CA09D9401A99DF14E4F621988AAAA7F72DE3C6612AE7C85CF7066B4FCB1191DC5C47BBA9F6CCB2C87BCBEA94110C9E520B38A69328D201C19FAB36C7F7751A0C6C4BFD82F657DAE1D4E3AE75793FDF6908F9E6C248419208BD9094FEE6F5F3C08C032C465108793BCFE91EDC1A14F00394F0AB333187CCB964A871F09A849EC7CBDFADDD149633DFCA9D89AA2E2D4D743E4F50290275EFC69BF0596C6402E6CEA968A528400402A1B82212F6C3D7A6705174885FAA882F58EFE69768C2B2253FD1CB0F60E511401CF7DD35881B84098AD4358A53589DDEC1E39C138FE80A460D87E7539CE89A980B632BD6D0456B0EC3E60CA2F8F87D7BEB2E02D43F4B886CAD638FBA3B401EBB61620584DC6EE21539414BE46D6C01B8AFE938291A373DD1A6E0C26DC9113B5EBC7C0FDB1E101D58F41596E073B642F89C4AEEFF539D50C77C5D7D66DFE4314DD98774CE0146E04C6C4230FF9E69D4CCD55482A0A3F5E97D83B35544AE2EED1E05CA57A6FEA87FCC86CDD1998228E230B6B97F6660899098D8DBCBF188C49577E5BA4767D1656D90639FC72A73CD3DE8BC26788F03968BDCD76BD492385E35460AD09B6BE9589E8891E881BC8C1962D6604193E291978ADBBD1AA64ED854005F955459085719F63B76F3A577DDD3F4CE1CB0441A736385AD0E226D826FF1A57FEBF43667B79E809F5F38C62B308D630073C2BA4F6A9C830016E1E01FAF55873C1ACDFE7E0FBF06C08EAD8C9D2AC28F6BA1880151CDAAB6C16A41E68E3477ABA1AB1EF56ED416223F4B09CC0A56A04F238BFFDE79B9DB50471DCE183DE52A062486959868FB54DCFE4450F8E96026E3BF712DCF121CB2586DCE020530E845DEFE3EDBB3B72402AB81FCFF16C8F0FB92B91E5C8E0B6841B0CEC07232C96E08F847A628DCDE259E46F6494BF5F6BF1B541F9468E72AAA947B556F3AA7145ADE53753002AD5A9D70C5FE841A28D801889E64DF665B8D7C773D5556C665942A75CAECEECB31D5CE7F51ECCDDE32F2FEE9BC960EAA569A72E08DC4BDCD88E58A02665274FB8A47501999EAC2C09753E5502F26197AE1A5E313CEEB629D86548366A9BECC92DF1193356A9BD6EF3C537E31B13C79D48C268E4F0F874BAFA1DA0C1BA09E0807505DBAF608C981FE14D93DBD31A7A6F8DA08D8C0FAEC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/Feijoa-Medium cguidfix
/F2.1/Feijoa-Medium renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 465 248 rc
0 248 m
465 248 l
465 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1061 1118 m
2106 1118 l
2106 -1443 l
-1061 -1443 l
h
-1061 1118 m
f
0 0 0 sc
227.5 167 m
227.5 167 227.5 172.53438 227.0388 175.42734 c
226.66145 177.71237 223.49596 180.73112 210.03737 185.67851 c
196.78841 190.54205 197.60599 188.17317 197.60599 197.1246 c
197.60599 202.9315 200.56184 199.55638 202.44856 210.58321 c
203.1823 214.92265 203.76927 212.02969 205.3625 218.98958 c
206.20103 222.63724 204.79648 222.90976 204.96419 224.64973 c
205.1319 226.38971 205.29961 227.94101 205.61406 231.50482 c
205.99141 235.90717 201.90352 247.5 187.25 247.5 c
172.59648 247.5 168.50859 235.90717 168.90691 231.48386 c
169.22136 227.94101 169.38907 226.36874 169.55678 224.62877 c
169.72447 222.88881 168.31992 222.61627 169.15846 218.96861 c
170.75169 212.02969 171.33867 214.92265 172.0724 210.56224 c
173.95912 199.53542 176.91498 202.91055 176.91498 197.10365 c
176.91498 188.13126 177.73256 190.50014 164.4836 185.65755 c
151.02499 180.73112 147.83855 177.69141 147.48216 175.40639 c
147 172.53438 147 167 147 167 c
187.25 167 l
h
227.5 167 m
f
418.64859 243.76758 m
423.62515 238.79102 423.62515 230.72244 418.64859 225.7459 c
413.67203 220.76932 405.60345 220.76932 400.62689 225.7459 c
395.65033 230.72244 395.65033 238.79102 400.62689 243.76758 c
405.60345 248.74416 413.67203 248.74416 418.64859 243.76758 c
f
418.8129 191.93936 m
418.8129 191.83742 418.8129 191.73546 418.8129 191.63351 c
415.24478 191.32768 412.59418 188.37125 412.69611 184.80313 c
412.69611 183.78366 413.00195 182.76421 413.51169 181.94864 c
412.39029 181.54085 410.96304 181.33696 409.43384 181.33696 c
407.8027 181.33696 406.47742 181.54085 405.45795 181.94864 c
406.98712 184.19145 406.98712 187.24983 405.35599 189.59459 c
404.13263 191.22574 402.39957 192.24519 400.46259 192.44908 c
400.46259 194.48801 l
418.8129 194.48801 l
h
438.38654 210.5955 m
420.85181 219.77065 l
420.44403 219.8726 420.03625 219.97455 419.62845 219.97455 c
400.46259 219.97455 l
399.95285 219.97455 399.54507 219.8726 399.03534 219.77065 c
380.68503 209.57603 l
378.54416 208.76047 377.52469 206.41571 378.23831 204.37679 c
378.85001 202.64371 380.48114 201.62424 382.11227 201.62424 c
382.62201 201.62424 383.02979 201.72618 383.53952 201.82812 c
396.38474 208.55658 l
396.38474 208.55658 396.38474 191.73546 396.38474 191.42963 c
396.18085 191.32768 388.02515 185.6187 388.02515 185.6187 c
386.29208 184.39534 385.78235 181.94864 386.90375 180.1136 c
394.03998 168.89954 l
395.26334 166.96255 397.81198 166.45282 399.647 167.67618 c
401.48206 168.89954 402.09372 171.44818 400.87036 173.28322 c
397.40421 178.89026 l
399.647 178.89026 l
400.36063 178.89026 401.07425 178.9922 401.78787 179.19609 c
403.62292 177.97273 406.06961 177.25911 409.33191 177.25911 c
412.39029 177.25911 414.83698 177.97273 416.77396 178.9922 c
417.58954 178.58441 418.60901 178.48247 419.62845 178.48247 c
421.4635 178.58441 l
417.79343 173.48711 l
416.46814 171.65207 416.87592 169.10342 418.71094 167.77812 c
420.54596 166.45282 423.09464 166.86061 424.41992 168.69563 c
432.57562 179.90971 l
432.67755 180.01166 432.77951 180.1136 432.77951 180.31749 c
433.90091 182.25447 433.18729 184.80313 431.25031 185.92453 c
422.89075 190.61406 l
422.89075 191.02184 422.89075 208.96436 422.89075 208.96436 c
435.93985 202.74565 l
436.34763 202.64371 436.7554 202.54175 437.16318 202.54175 c
438.89627 202.54175 440.5274 203.66316 441.03714 205.39624 c
441.75076 207.63907 440.5274 209.88188 438.38654 210.5955 c
h
438.38654 210.5955 m
f
0 0.21568628 0.4627451 sc
1 0 0 -1 -193 483 cm
/F1.1[ 16 0 0 -16 0 0]sf
198.73601 356 m
(!"#$%&'\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411767 0 0.10980392 sc
/F2.1[ 16 0 0 -16 0 0]sf
352.78201 357 m
(!"#$%&)[ 7.648000 16.528000 8.416000 7.248000 8.448000 0.000000 ] xS
580.23077 357 m
(!'\(\)&)[ 7.648000 11.136000 8.400000 9.488000 0.000000 ] xS
0 0.21568628 0.4627451 sc
/F1.1[ 16 0 0 -16 0 0]sf
203.536 394.5 m
(*'$%&'\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411767 0 0.10980392 sc
/F2.1[ 16 0 0 -16 0 0]sf
351.01401 395.5 m
(!*#+\(,&)[ 7.648000 15.776000 8.416000 5.264000 8.400000 6.320000 0.000000 ] xS
572.65472 395.5 m
(!*#+\(,&)[ 7.648000 15.776000 8.416000 5.264000 8.400000 6.320000 0.000000 ] xS
0 0.21568628 0.4627451 sc
/F1.1[ 16 0 0 -16 0 0]sf
198 433 m
(+"#%,-'%\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411767 0 0.10980392 sc
/F2.1[ 16 0 0 -16 0 0]sf
329.16599 434 m
(!-./01201-3&)[ 7.648000 7.776000 10.096000 10.048000 9.664000 5.600000 9.856000 9.664000 5.600000 7.776000 10.320000 0.000000 ] xS
550.75873 434 m
(!42-/12/140&)[ 7.648000 9.024000 9.856000 7.776000 10.048000 5.600000 9.856000 10.048000 5.600000 9.024000 9.664000 0.000000 ] xS
0.13725491 0.36862746 0 sc
/F1.1[ 16 0 0 -16 0 0]sf
203.536 471.5 m
(.\)%/.\)01)[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.7019608 0.26666668 0 sc
/F2.1[ 16 0 0 -16 0 0]sf
371.60599 472.5 m
(53)[ 7.968000 0.000000 ] xS
598.50275 472.5 m
(-)s
ep
end
%%Trailer
%%EOF
